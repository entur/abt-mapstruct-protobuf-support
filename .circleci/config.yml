# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

aliases:
  - &downstream_builds
    name: Trigger downstream builds
    command: |
      echo 'export CIRCLE_API_TOKEN="$CIRCLE_API_USER_TOKEN"' >> $BASH_ENV
      /tools/downstream_single_trigger.sh "gh/entur/abt-core" "develop"
      /tools/downstream_single_trigger.sh "gh/entur/abt-referencedata" "develop"
      /tools/downstream_single_trigger.sh "gh/entur/abt-inspection-lib" "develop"

  - &sonar-scan
    name: Sonar
    command: |
      mvn sonar:sonar \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}
  - &release
    name: Release
    command: |
      if [ "$(git log -1 --pretty=%B)" == "Start release" ]
      then
        echo "Start release"
        git config --global user.email "circleci@entur.no"
        git config --global user.name "circleci"
        git checkout master
        git pull --no-edit
        git checkout develop
        mvn versions:use-releases
        mvn gitflow:release-start gitflow:release-finish -DpostReleaseGoals=deploy -B
      else
        echo "Skipping release"
      fi

  - &maven-settings-file
    "\"<settings xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd' xmlns='http://maven.apache.org/SETTINGS/1.1.0'
          xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
        <servers>
          <server>
            <username>$entur_artifactory_user</username>
            <password>$entur_artifactory_password</password>
            <id>central</id>
          </server>
          <server>
            <username>$entur_artifactory_user</username>
            <password>$entur_artifactory_password</password>
            <id>snapshots</id>
          </server>
        </servers>
  <profiles>
    <profile>
      <repositories>
        <repository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>central</id>
          <name>partnerrelease</name>
          <url>$entur_artifactory_contextUrl/partnerrelease</url>
        </repository>
        <repository>
          <snapshots />
          <id>snapshots</id>
          <name>partnersnapshot</name>
          <url>$entur_artifactory_contextUrl/partnersnapshot</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>central</id>
          <name>partnerrelease</name>
          <url>$entur_artifactory_contextUrl/partnerrelease</url>
        </pluginRepository>
        <pluginRepository>
          <snapshots />
          <id>snapshots</id>
          <name>partnersnapshot</name>
          <url>$entur_artifactory_contextUrl/partnersnapshot</url>
        </pluginRepository>
      </pluginRepositories>
      <properties>
        <entur_artifactory_partner_publish_snapshot_url>$entur_artifactory_contextUrl/partner-snapshot-local</entur_artifactory_partner_publish_snapshot_url>
        <entur_artifactory_partner_publish_release_url>$entur_artifactory_contextUrl/partner-release-local</entur_artifactory_partner_publish_release_url>
      </properties>
      <id>entur-partner</id>
    </profile>
    </profiles>
    <activeProfiles>
        <activeProfile>entur-partner</activeProfile>
    </activeProfiles>
    </settings>\""

  - &java-container-config
    docker:
      - image: circleci/openjdk:11-jdk

  - &circleci-container-config
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY


commands:
  generate-maven-settings-file:
    parameters:
      settings-file:
        type: string
    steps:
      - run:
          name: Generate Maven Settings File
          command: |
            mkdir -p ~/.m2
            echo -e << parameters.settings-file >> > ~/.m2/settings.xml
  send-slack-message:
    parameters:
      payload:
        type: string
    steps:
      - run:
          name: Sending message to Slack
          command: |
            curl -X POST -H 'Content-type: application/json' --data << parameters.payload >> $SLACK_WEBHOOK

jobs:
  build:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx1024m

    steps:
      - checkout

      - restore_cache:
          keys:
            - cache-dependencies-{{ checksum "pom.xml" }}
            - cache-dependencies-abt-referencedata-11012019

      - generate-maven-settings-file:
          settings-file: *maven-settings-file

      - run: mvn clean verify

      - save_cache:
          paths:
            - ~/.m2
          key: cache-dependencies-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ../
          paths:
            - project
            - .m2

      - store_artifacts:
          path: target/dependency-check-report.html

      - store_artifacts:
          path: target/dependency-check-vulnerability.html

  postBuild:
    <<: *circleci-container-config

    steps:
      - run: *downstream_builds

  sonar:
    <<: *java-container-config
    steps:
      - attach_workspace:
          at: ../
      - restore_cache:
          keys:
            - cache-dependencies-{{ checksum "pom.xml" }}
            - cache-dependencies-18012019

      - run: *sonar-scan

  deploy:
    <<: *java-container-config
    steps:
      - attach_workspace:
          at: ../
      - restore_cache:
          keys:
            - cache-dependencies-{{ checksum "pom.xml" }}
            - cache-dependencies-18012019

      - run: mvn deploy -DskipTests

  release:
    <<: *java-container-config
    steps:
      - checkout
      - attach_workspace:
          at: ../
      - restore_cache:
          keys:
            - cache-dependencies-{{ checksum "pom.xml" }}
            - cache-dependencies-18012019
      - run: *release


workflows:
  version: 2
  nightly-sonar-analysis:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: develop
    jobs:
      - build:
          context: org-default-build
      - sonar:
          context: org-carbon
          requires:
            - build
  main:
    jobs:
      - build:
          context: org-default-build
      - postBuild:
          context: org-carbon
          requires:
            - deploy
          filters:
            branches:
              only: develop
      - release:
          context: org-default-build
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy:
          context: org-carbon
          requires:
            - build
          filters:
            branches:
              only:
              - develop
